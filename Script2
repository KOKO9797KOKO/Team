--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v93=v5(v83,v19);v19=nil;return v93;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=0 -0 ;local v85;while true do if (v84==((0 + 0) -0)) then v85=(v31/((3 -1)^(v32-(2 -1))))%((621 -(555 + (941 -(282 + 595))))^(((v33-1) -(v32-(932 -(857 + 74)))) + 1)) ;return v85-(v85%1) ;end end else local v86=(570 -((2004 -(1523 + 114)) + 181 + 20))^(v32-1) ;return (((v31%(v86 + v86))>=v86) and (928 -(214 + 713))) or (0 + 0) ;end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==((1183 -(32 + 85)) -(68 + 997))) then return v35;end if (v34==((1245 + 25) -(226 + 1044))) then v35=v1(v16,v18,v18);v18=v18 + (4 -3) ;v34=1;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;return (v37 * 256) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (4 -1) );v18=v18 + 4 ;return (v41 * (40022563 -23245347)) + (v40 * (121138 -55602)) + (v39 * (188 + 68)) + v38 ;end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(1 + (1423 -(630 + 793)))) then v45=3 -2 ;v46=(v20(v44,443 -(416 + 26) ,63 -43 ) * ((954 -(802 + 150))^(85 -(179 -126)))) + v43 ;v42=440 -(145 + 293) ;end if (v42==(433 -(44 + 386))) then if (v47==((0 -0) -0)) then if (v46==(0 + 0)) then return v48 * 0 ;else v47=1;v45=0 + 0 + 0 ;end elseif (v47==((9705 -6886) -(201 + 571))) then return ((v46==(997 -(915 + 82))) and (v48 * (((1749 -(760 + 987)) -1)/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-(1344 -321) ) * (v45 + (v46/((1189 -(1069 + 118))^(117 -65)))) ;end if (v42==(3 -1)) then v47=v20(v44,880 -(814 + 45) ,31);v48=((v20(v44,78 -46 )==((1914 -(1789 + 124)) + 0)) and  -(1 -0)) or (1 + 0) ;v42=(1560 -(745 + 21)) -(368 + 423) ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=19 -(10 + 8) ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==0) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v66=2 -1 , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do if (2==v52) then local v90=(function() return 0 -0 ;end)();while true do if (v90==0) then v59=(function() return {};end)();for v107= #":",v58 do local v108=(function() return 0 -0 ;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v108==1) then if (v109== #"<") then v110=(function() return v21()~=(0 -0) ;end)();elseif (v109==(1826 -(1195 + 629))) then v110=(function() return v24();end)();elseif (v109== #"nil") then v110=(function() return v25();end)();end v59[v107]=(function() return v110;end)();break;end if (v108~=(0 -0)) then else v109=(function() return v21();end)();v110=(function() return nil;end)();v108=(function() return 1;end)();end end end v90=(function() return 2 -1 ;end)();end if (v90~=(242 -(187 + 54))) then else v57[ #"19("]=(function() return v21();end)();v52=(function() return 783 -(162 + 618) ;end)();break;end end end if (v52~=(3 + 0)) then else for v94= #"[",v23() do local v95=(function() return v21();end)();if (v20(v95, #"{", #"{")==(0 + 0)) then local v102=(function() return 0 -0 ;end)();local v103=(function() return;end)();local v104=(function() return;end)();local v105=(function() return;end)();local v106=(function() return;end)();while true do if (v102==(0 -0)) then local v116=(function() return 0;end)();while true do if (v116==(1 + 0)) then v102=(function() return 1637 -(1373 + 263) ;end)();break;end if (v116==(0 + 0)) then v103=(function() return 1171 -(418 + 753) ;end)();v104=(function() return nil;end)();v116=(function() return 1 + 0 ;end)();end end end if (v102~=(1002 -(451 + 549))) then else while true do if (v103~= #",") then else local v118=(function() return 0 + 0 ;end)();local v119=(function() return;end)();while true do if ((0 -0)==v118) then v119=(function() return 0;end)();while true do if (v119~=(530 -(406 + 123))) then else v103=(function() return 1771 -(1749 + 20) ;end)();break;end if (v119==0) then v106=(function() return {v22(),v22(),nil,nil};end)();if (v104==(1322 -(1249 + 73))) then local v422=(function() return 0 -0 ;end)();local v423=(function() return;end)();while true do if (0~=v422) then else v423=(function() return 0;end)();while true do if ((1384 -(746 + 638))==v423) then v106[ #"asd"]=(function() return v22();end)();v106[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v104== #":") then v106[ #"91("]=(function() return v23();end)();elseif (v104==2) then v106[ #"asd"]=(function() return v23() -((1147 -(466 + 679))^16) ;end)();elseif (v104~= #"19(") then else local v471=(function() return 0 + 0 ;end)();local v472=(function() return;end)();while true do if (v471~=(0 -0)) then else v472=(function() return 1900 -(106 + 1794) ;end)();while true do if (v472==0) then v106[ #"asd"]=(function() return v23() -((2 -0)^16) ;end)();v106[ #".dev"]=(function() return v22();end)();break;end end break;end end end v119=(function() return 342 -(218 + 123) ;end)();end end break;end end end if (v103~= #"19(") then else if (v20(v105, #"nil", #"-19")~= #"|") then else v106[ #".com"]=(function() return v59[v106[ #".dev"]];end)();end v54[v94]=(function() return v106;end)();break;end if (v103==(1583 -(1535 + 46))) then local v121=(function() return 0 + 0 ;end)();while true do if (v121==(0 -0)) then if (v20(v105, #">", #"[")~= #"[") then else v106[1 + 1 ]=(function() return v59[v106[562 -(306 + 254) ]];end)();end if (v20(v105,1 + 1 ,3 -1 )~= #"{") then else v106[ #"nil"]=(function() return v59[v106[ #"-19"]];end)();end v121=(function() return 1468 -(899 + 568) ;end)();end if (v121~=1) then else v103=(function() return  #"xnx";end)();break;end end end if (v103~=0) then else local v122=(function() return 0;end)();local v123=(function() return;end)();while true do if (v122~=(0 + 0)) then else v123=(function() return 0;end)();while true do if (v123==(1428 -(41 + 1386))) then v103=(function() return  #" ";end)();break;end if (v123~=0) then else v104=(function() return v20(v95,2, #"91(");end)();v105=(function() return v20(v95, #"asd1",14 -8 );end)();v123=(function() return 604 -(268 + 335) ;end)();end end break;end end end end break;end if (v102==(291 -(60 + 230))) then v105=(function() return nil;end)();v106=(function() return nil;end)();v102=(function() return 2;end)();end end end end for v96= #"[",v23() do v55,v96,v28=(function() return v53(v55,v96,v28);end)();end return v57;end if ((573 -(426 + 146))~=v52) then else local v91=(function() return 0 + 0 ;end)();while true do if (v91~=(0 + 0)) then else v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v91=(function() return 1;end)();end if (1~=v91) then else v58=(function() return v23();end)();v52=(function() return 813 -(569 + 242) ;end)();break;end end end if (v52==0) then local v92=(function() return 0 -0 ;end)();while true do if (v92==(2 -1)) then v55=(function() return {};end)();v52=(function() return 1 + 0 ;end)();break;end if (v92~=(0 -0)) then else v53=(function() return function(v111,v112,v113) local v114=(function() return 0 -0 ;end)();local v115=(function() return;end)();while true do if (v114~=(0 + 0)) then else v115=(function() return 0;end)();while true do if (v115==(1024 -(706 + 318))) then local v125=(function() return 0 + 0 ;end)();while true do if (v125==0) then v111[v112-#"<" ]=(function() return v113();end)();return v111,v112,v113;end end end end break;end end end;end)();v54=(function() return {};end)();v92=(function() return 1252 -(721 + 530) ;end)();end end end end end local function v29(v60,v61,v62) local v63=v60[1 -0 ];local v64=v60[1051 -(572 + 477) ];local v65=v60[68 -(24 + 6 + 35) ];return function(...) local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1;local v73= -(1 + 0);local v74={};local v75={...};local v76=v12("#",...) -(3 -2) ;local v77={};local v78={};for v87=1212 -(118 + 205 + 889) ,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + (2 -1) ];else v78[v87]=v75[v87 + (1 -0) ];end end local v79=(v76-v70) + (581 -(361 + 219)) ;local v80;local v81;while true do v80=v68[v72];v81=v80[(1336 -(657 + 358)) -(53 + 267) ];if ((v81<=(12 + 39)) or (415>2999)) then if (v81<=(438 -((39 -24) + 398))) then if ((v81<=((2264 -1270) -(18 + 964))) or (108>=1198)) then if ((v81<=(18 -13)) or (2152>4991)) then if (v81<=(2 + 0)) then if (v81<=(0 + (1187 -(1151 + 36)))) then if (v78[v80[852 -(20 + 830) ]] or (3202>=3970)) then v72=v72 + 1 + 0 ;else v72=v80[129 -(116 + 10) ];end elseif (v81==(1 + 0)) then v78[v80[(5 + 0) -3 ]]();else v78[v80[740 -(542 + 52 + 144) ]]=v62[v80[6 -3 ]];end elseif (v81<=(1 + 2)) then local v126=489 -(457 + 32) ;local v127;local v128;local v129;while true do if (v126==(0 + 0)) then v127=v80[1 + 1 ];v128={v78[v127](v13(v78,v127 + 1 + 0 ,v73))};v126=2 -1 ;end if (v126==(2 -1)) then v129=796 -(588 + (621 -413)) ;for v367=v127,v80[1555 -(1126 + 425) ] do v129=v129 + (406 -(118 + 287)) ;v78[v367]=v128[v129];end break;end end elseif (v81>(15 -11)) then v78[v80[1123 -(118 + 1003) ]]={};else local v180=0;local v181;local v182;local v183;local v184;while true do if ((v180==(5 -(1835 -(1552 + 280)))) or (3918>=4397)) then for v424=v181,v73 do v184=v184 + (378 -(142 + 235)) ;v78[v424]=v182[v184];end break;end if (v180==(1889 -(1569 + 320))) then v181=v80[836 -(64 + 770) ];v182,v183=v71(v78[v181](v78[v181 + (4 -3) ]));v180=1 + 0 ;end if (v180==((665 + 313) -(553 + 424))) then v73=(v183 + v181) -(1 -(0 -0)) ;v184=0 + 0 ;v180=2 + 0 ;end end end elseif (v81<=8) then if (v81<=(4 + 2)) then v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]][v78[v80[4 + 0 ]]];elseif ((v81==7) or (780==3185)) then v72=v80[6 -3 ];elseif (v78[v80[5 -3 ]]~=v80[8 -4 ]) then v72=v72 + 1 + 0 ;else v72=v80[14 -11 ];end elseif ((v81<=(763 -(239 + 514))) or (3202>=4075)) then if ((64==64) and (v81==(4 + 5))) then if (v78[v80[183 -(92 + 89) ]]<=v78[v80[7 -3 ]]) then v72=v72 + (1330 -(797 + 532)) ;else v72=v80[3 + 0 ];end else v78[v80[1 + 1 + 0 ]]=v80[6 -3 ];end elseif (v81==(1213 -((1616 -(157 + 1086)) + 829))) then v78[v80[733 -(476 + (510 -255)) ]]=v78[v80[2 + 1 ]][v78[v80[1134 -((1616 -1247) + 761) ]]];elseif  not v78[v80[2 + 0 ]] then v72=v72 + (1 -0) ;else v72=v80[1247 -((743 -258) + 759) ];end elseif (v81<=(33 -15)) then if (v81<=(253 -(64 + 174))) then if (v81<=13) then local v132=v80[1 + 1 ];v78[v132](v78[v132 + (1 -0) ]);elseif (v81==(350 -((196 -52) + (1011 -(599 + 220))))) then if (v78[v80[218 -(42 + (346 -172)) ]]~=v78[v80[4 + 0 ]]) then v72=v72 + 1 + 0 ;else v72=v80[2 + 1 ];end else v78[v80[1506 -(363 + 1141) ]][v80[1583 -(1183 + (2328 -(1813 + 118))) ]]=v78[v80[11 -7 ]];end elseif (v81<=(12 + 4)) then v78[v80[2 + 0 ]]=v78[v80[1978 -(1913 + 62) ]][v80[3 + 1 ]];elseif (v81>(44 -27)) then if (v78[v80[(1415 + 520) -(565 + 1368) ]]~=v78[v80[3 + 1 ]]) then v72=v72 + (3 -2) ;else v72=v80[5 -2 ];end else local v192=1661 -(1477 + 184) ;local v193;while true do if ((2202>=694) and (v192==(0 + 0))) then v193=v80[2 -0 ];do return v13(v78,v193,v73);end break;end end end elseif (v81<=(20 + 1)) then if (v81<=(875 -(564 + 292))) then local v135=v80[(1219 -(841 + 376)) -0 ];do return v78[v135](v13(v78,v135 + ((2 -0) -1) ,v80[307 -(244 + 60) ]));end elseif ((3706<=3900) and (v81==(10 + 10))) then v78[v80[2 + 0 + 0 ]][v80[479 -(41 + 435) ]]=v80[1005 -(938 + 63) ];else v78[v80[2 + 0 ]]=v80[10 -7 ]~=(1125 -(936 + 189)) ;end elseif (v81<=(8 + 15)) then if ((2890>2617) and (v81==(1635 -(1565 + 48)))) then local v197=v80[741 -(396 + 343) ];v78[v197]=v78[v197](v13(v78,v197 + 1 + 0 ,v80[1141 -(782 + 356) ]));else local v199=267 -(176 + 91) ;local v200;local v201;local v202;while true do if (v199==((0 -0) -(859 -(464 + 395)))) then v200=v80[2 -0 ];v201=v78[v200 + 2 + (0 -0) ];v199=1093 -(975 + 117) ;end if (v199==1) then v202=v78[v200] + v201 ;v78[v200]=v202;v199=1877 -(157 + 1718) ;end if (v199==(2 + 0)) then if (v201>(0 -0)) then if (v202<=v78[v200 + (3 -2) ]) then v72=v80[(491 + 530) -(697 + 321) ];v78[v200 + (7 -4) ]=v202;end elseif ((v202>=v78[v200 + 1 ]) or (3355>4385)) then v72=v80[5 -2 ];v78[v200 + (6 -3) ]=v202;end break;end end end elseif (v81==(10 + 14)) then v78[v80[3 -1 ]][v80[7 -4 ]]=v78[v80[1231 -((1159 -(467 + 370)) + 905) ]];else v78[v80[613 -(602 + 9) ]]=v29(v69[v80[1192 -(449 + 740) ]],nil,v62);end elseif (v81<=(910 -(826 + (94 -48)))) then if ((v81<=(76 -45)) or (3067<=2195)) then if (v81<=(975 -(245 + 702))) then if ((3025>=2813) and (v81<=(2 + 18 + 6))) then if ((2412>=356) and  not v78[v80[6 -(13 -9) ]]) then v72=v72 + 1 + 0 + 0 ;else v72=v80[1 + (4 -2) ];end elseif (v81>(1925 -(260 + 1638))) then if (v78[v80[1 + 1 ]]~=v80[444 -(382 + 58) ]) then v72=v72 + (3 -2) ;else v72=v80[3 + 0 ];end else local v207=v80[(523 -(150 + 370)) -1 ];v78[v207]=v78[v207]();end elseif (v81<=(85 -56)) then local v136=v80[(2489 -(74 + 1208)) -(902 + 303) ];v78[v136]=v78[v136]();elseif ((2070>1171) and (v81>(23 + 7))) then if ((v78[v80[3 -1 ]]==v78[v80[9 -5 ]]) or (4108<3934)) then v72=v72 + 1 + 0 ;else v72=v80[1693 -((2756 -1635) + 569) ];end else v78[v80[4 -2 ]]=v61[v80[217 -(22 + 192) ]];end elseif (v81<=(717 -(483 + 200))) then if (v81<=(1495 -(1404 + 59))) then local v138=(0 -0) -(0 + 0) ;local v139;while true do if (v138==(0 -0)) then v139=v78[v80[769 -(468 + 297) ]];if v139 then v72=v72 + (563 -(334 + 228)) ;else v78[v80[6 -4 ]]=v139;v72=v80[3];end break;end end elseif (v81==(76 -43)) then v78[v80[1 + 1 ]]=v78[v80[5 -2 ]] + v80[4] ;elseif (v78[v80[1 + (391 -(14 + 376)) ]]<=v78[v80[1103 -(35 + 1064) ]]) then v72=v72 + ((410 -173) -(141 + 95)) ;else v72=v80[3 + 0 ];end elseif (v81<=(92 -56)) then if (v81==(74 -39)) then local v212=v80[1 + 1 ];local v213=v78[v80[1239 -(298 + 938) ]];v78[v212 + (1260 -(233 + 1026)) ]=v213;v78[v212]=v213[v80[1670 -(636 + 1030) ]];else v61[v80[3]]=v78[v80[(3 + 1) -(2 + 0) ]];end elseif (v81==(9 + 28)) then v61[v80[8 -5 ]]=v78[v80[2 + 0 ]];elseif ((3499>=3439) and (v78[v80[2 + 0 ]]==v80[2 + 2 ])) then v72=v72 + (1 -0) ;else v72=v80[2 + 1 ];end elseif (v81<=(207 -(88 + 4 + 71))) then if (v81<=(5 + (105 -69))) then if (v81<=(148 -109)) then v78[v80[1 + 1 ]][v80[4 -1 ]]=v80[769 -(574 + 191) ];elseif ((876<3303) and (v81==(16 + 24))) then local v221=v80[2 + 0 + 0 ];local v222=v78[v221];local v223=v80[3];for v310=2 -1 ,v223 do v222[v310]=v78[v221 + v310 ];end else local v224=v80[2 + 0 ];local v225=v80[4];local v226=v224 + (851 -(254 + 595)) ;local v227={v78[v224](v78[v224 + (1 -0) ],v78[v226])};for v313=320 -((317 -183) + 124 + 61) ,v225 do v78[v226 + v313 ]=v227[v313];end local v228=v227[1791 -(573 + 1093 + 124) ];if v228 then v78[v226]=v228;v72=v80[3];else v72=v72 + (2 -(1 -0)) ;end end elseif (v81<=(4 + 38)) then v78[v80[970 -(151 + 327 + 490) ]]=v80[4 -1 ];elseif ((2922<=3562) and (v81>(982 -(714 + 225)))) then local v229=v80[(906 -(652 + 249)) -3 ];local v230=v78[v229];local v231=v78[v229 + ((5 -3) -0) ];if (v231>(1379 -(1055 + 324))) then if ((2619>=1322) and (v230>v78[v229 + 1 + 0 ])) then v72=v80[3 -0 ];else v78[v229 + 3 ]=v230;end elseif ((4133>=2404) and (v230<v78[v229 + 1 + 0 ])) then v72=v80[809 -(118 + 688) ];else v78[v229 + (51 -(25 + 23)) ]=v230;end else local v232=0 + 0 ;local v233;while true do if (v232==(0 -0)) then v233=v80[1888 -(927 + 959) ];v78[v233]=v78[v233](v13(v78,v233 + 1 + 0 ,v80[10 -7 ]));break;end end end elseif (v81<=(181 -134)) then if ((v81<=((2023 -(708 + 1160)) -110)) or (1433==2686)) then local v144=v80[(1992 -1258) -(16 + 716) ];do return v13(v78,v144,v73);end elseif (v81==(117 -71)) then local v234=v80[3 -1 ];local v235={v78[v234](v13(v78,v234 + (2 -1) ,v73))};local v236=(312 -(10 + 17)) -(175 + 110) ;for v316=v234,v80[9 -5 ] do v236=v236 + (4 -3) ;v78[v316]=v235[v236];end else local v237=v80[1 + 1 ];local v238=v78[v237 + (1798 -(503 + 1293)) ];local v239=v78[v237] + v238 ;v78[v237]=v239;if (v238>(0 -(1732 -(1400 + 332)))) then if (v239<=v78[v237 + 1 + 0 ]) then v72=v80[1064 -(810 + 251) ];v78[v237 + 3 + 0 ]=v239;end elseif (v239>=v78[v237 + (1 -0) + 0 ]) then v72=v80[1 + 2 ];v78[v237 + (1089 -(686 + (2308 -(242 + 1666)))) ]=v239;end end elseif (v81<=(45 + 4)) then if ((v81==(277 -(73 + 156))) or (4123==4457)) then local v241=v78[v80[537 -(43 + 490) ]];if v241 then v72=v72 + (734 -(711 + 22)) ;else v78[v80[7 -5 ]]=v241;v72=v80[9 -6 ];end else for v319=v80[861 -(240 + 265 + 354) ],v80[1 + 0 + 2 ] do v78[v319]=nil;end end elseif ((v81>(79 -29)) or (3972<=205)) then local v242=v80[1 + 1 ];local v243=v78[v242];for v321=v242 + (1745 -(1344 + 400)) ,v80[408 -(255 + 150) ] do v7(v243,v78[v321]);end else local v244=v80[3 -1 ];local v245,v246=v71(v78[v244](v13(v78,v244 + (3 -2) ,v80[3 + 0 ])));v73=(v246 + v244) -(1 + 0 + 0) ;local v247=(940 -(850 + 90)) -0 ;for v322=v244,v73 do local v323=0 -0 ;while true do if (v323==(1739 -(404 + 1335))) then v247=v247 + ((712 -305) -((1573 -(360 + 1030)) + 223)) ;v78[v322]=v245[v247];break;end end end end elseif (v81<=(112 -35)) then if (v81<=(77 -13)) then if (v81<=(38 + 19)) then if (v81<=(20 + 34)) then if (v81<=((345 + 44) -(10 + 327))) then local v145=0 + 0 ;local v146;local v147;local v148;while true do if ((338 -(118 + (620 -400)))==v145) then v146=v80[1 + 1 ];v147=v78[v146];v145=450 -(108 + 341) ;end if ((v145==(4 -(3 -0))) or (3766<1004)) then v148=v80[3];for v383=1 + 0 ,v148 do v147[v383]=v78[v146 + v383 ];end break;end end elseif (v81==(224 -171)) then local v248=1493 -((2372 -(909 + 752)) + (2005 -(109 + 1114))) ;local v249;local v250;while true do if ((0 -(0 -0))==v248) then v249=v80[471 -(106 + 164 + 199) ];v250={};v248=1 + 0 ;end if ((1820 -(580 + 1239))==v248) then for v437=2 -1 , #v77 do local v438=v77[v437];for v450=(242 -(6 + 236)) + 0 , #v438 do local v451=v438[v450];local v452=v451[1 + 0 ];local v453=v451[1 + 0 + 1 ];if ((v452==v78) and (v453>=v249)) then v250[v453]=v452[v453];v451[1 + 0 ]=v250;end end end break;end end else local v251=v80[4 -(2 + 0) ];local v252,v253=v71(v78[v251](v13(v78,v251 + (2 -1) + 0 ,v80[1170 -(645 + 522) ])));v73=(v253 + v251) -(1791 -(1010 + 780)) ;local v254=(0 -0) + 0 ;for v327=v251,v73 do v254=v254 + 1 + 0 ;v78[v327]=v252[v254];end end elseif (v81<=(262 -(1340 -(1076 + 57)))) then local v149=0 -0 ;local v150;local v151;local v152;local v153;while true do if (v149==(1963 -(556 + 1407))) then v150=v80[5 -3 ];v151,v152=v71(v78[v150](v78[v150 + (1837 -(1045 + 791)) ]));v149=2 -1 ;end if ((1 -0)==v149) then v73=(v152 + v150) -(506 -(351 + 154)) ;v153=1574 -(211 + 1070 + 293) ;v149=268 -(28 + 238) ;end if (v149==(4 -2)) then for v386=v150,v73 do local v387=0;while true do if (v387==((2248 -(579 + 110)) -(1381 + 178))) then v153=v153 + 1 + 0 + 0 + 0 ;v78[v386]=v151[v153];break;end end end break;end end elseif (v81>(1286 -(957 + 273))) then if ((1784<2184) and (v78[v80[2 + 0 ]]<v80[4 + 0 ])) then v72=v72 + 1 + 0 ;else v72=v80[11 -8 ];end elseif (v80[5 -3 ]<v78[v80[11 -(4 + 3) ]]) then v72=v72 + (3 -2) ;else v72=v80[3];end elseif (v81<=((439 -(174 + 233)) + 28)) then if (v81<=(528 -((1064 -683) + 89))) then for v171=v80[2 + 0 ],v80[3 + 0 ] do v78[v171]=nil;end elseif (v81==(100 -41)) then v78[v80[1158 -(1074 + 82) ]]=v78[v80[6 -3 ]];else v78[v80[1786 -(214 + 1570) ]]=v78[v80[1458 -(990 + 465) ]];end elseif ((v81<=(26 + 36)) or (1649>4231)) then if (v81>(27 + 34)) then v78[v80[(548 -235) -(309 + 2) ]]=v80[3 + 0 ]~=(0 -0) ;elseif (v78[v80[(769 + 959) -(1668 + (1232 -(663 + 511))) ]]==v78[v80[630 -(512 + 114) ]]) then v72=v72 + (2 -1) ;else v72=v80[5 -2 ];end elseif ((3193==3193) and (v81>(219 -156))) then local v260=0 + 0 ;local v261;while true do if ((v260==(0 -0)) or (3495>4306)) then v261=v80[1 + 1 ];v78[v261]=v78[v261](v13(v78,v261 + 1 + 0 ,v73));break;end end else local v262=v80[6 -4 ];v78[v262](v13(v78,v262 + (1995 -(109 + 1885)) ,v80[1472 -(1133 + 136 + 200) ]));end elseif (v81<=(9 + 61)) then if (v81<=(1762 -(556 + 1139))) then if (v81<=(124 -59)) then if v78[v80[817 -(98 + 717) ]] then v72=v72 + 1 + 0 ;else v72=v80[829 -(802 + 24) ];end elseif (v81==(26 + 40)) then if ((4001>3798) and (v78[v80[2 -0 ]]==v80[(1 + 3) -0 ])) then v72=v72 + (1 -0) ;else v72=v80[3];end elseif ((v80[1 + 1 ]<v78[v80[4 + 0 ]]) or (4688<=4499)) then v72=v72 + 1 + 0 ;else v72=v80[7 -(12 -8) ];end elseif ((v81<=(239 -171)) or (1567<=319)) then local v154=0 + 0 ;local v155;while true do if (v154==((0 + 0) -0)) then v155=v80[5 -3 ];v78[v155]=v78[v155](v78[v155 + (3 -2) ]);break;end end elseif (v81>(25 + 44)) then v78[v80[1 + 1 ]]=v78[v80[3 + 0 ]][v80[(6 -3) + 1 ]];else do return v78[v80[1 + 1 ]];end end elseif (v81<=(1506 -(797 + 636))) then if (v81<=(344 -(660 -387))) then do return;end elseif (v81>(135 -63)) then local v266=v80[1621 -(1427 + 192) ];v78[v266]=v78[v266](v78[v266 + 1 + 0 ]);else v78[v80[(2 + 2) -2 ]]= #v78[v80[6 -3 ]];end elseif ((v81<=(68 + 7)) or (4583==3761)) then if (v81==((65 -31) + 40)) then v78[v80[1778 -(421 + 1355) ]]();else v78[v80[328 -(192 + 134) ]]={};end elseif (v81==(1352 -(316 + 960))) then if ((3454>1580) and (v80[2 + 0 ]==v78[v80[4 + 0 ]])) then v72=v72 + 1 + 0 ;else v72=v80[11 -8 ];end else v78[v80[553 -(83 + 468) ]]=v78[v80[1809 -(1202 + 604) ]] + v80[(316 + 127) -(397 + 42) ] ;end elseif ((v81<=(29 + 61)) or (1607==20)) then if (v81<=(883 -(24 + 776))) then if (v81<=(373 -293)) then if (v81<=(863 -(222 + 563))) then local v156=v78[v80[(1 + 5) -2 ]];if ( not v156 or (962>=4666)) then v72=v72 + (2 -1) ;else local v271=0 + (722 -(478 + 244)) ;while true do if ((325 -((562 -(440 + 77)) + 280))==v271) then v78[v80[1 + 1 + 0 ]]=v156;v72=v80[3 + 0 ];break;end end end elseif (v81==(29 + 50)) then v78[v80[2 + 0 ]]=v29(v69[v80[1 + 2 ]],nil,v62);else v78[v80[850 -(40 + 808) ]]= #v78[v80[5 -2 ]];end elseif (v81<=(1992 -(340 + 1571))) then local v157=v80[1 + 1 ];local v158=v80[4];local v159=v157 + (1774 -((6342 -4609) + 39)) ;local v160={v78[v157](v78[v157 + (1035 -(125 + 909)) ],v78[v159])};for v173=1949 -(1096 + 852) ,v158 do v78[v159 + v173 ]=v160[v173];end local v161=v160[1 + 0 ];if v161 then local v274=0 -0 ;while true do if ((v274==(1556 -(655 + 901))) or (1896==1708)) then v78[v159]=v161;v72=v80[3 + 0 ];break;end end else v72=v72 + (1 -0) ;end elseif (v81>(594 -(409 + 103))) then local v275=v80[238 -(46 + 190) ];do return v78[v275](v13(v78,v275 + (96 -(51 + 44)) ,v80[1 + 2 ]));end else local v276=v80[1319 -(1114 + 203) ];local v277=v78[v276];local v278=v78[v276 + (728 -(228 + 498)) ];if (v278>(0 -0)) then if (v277>v78[v276 + 1 + 0 ]) then v72=v80[2 + 1 ];else v78[v276 + (666 -(174 + 489)) ]=v277;end elseif ((3985>=1284) and (v277<v78[v276 + (2 -1) ])) then v72=v80[1908 -(830 + 1075) ];else v78[v276 + (527 -(303 + 221)) ]=v277;end end elseif ((v81<=(1355 -(231 + 1038))) or (1987==545)) then if (v81<=(70 + 14)) then local v162=1162 -(171 + 991) ;local v163;while true do if ((v162==((0 + 0) -0)) or (4896<1261)) then v163=v78[v80[10 -6 ]];if  not v163 then v72=v72 + (3 -2) ;else local v416=0 -0 ;while true do if ((23<3610) and (v416==(0 + 0))) then v78[v80[3 -1 ]]=v163;v72=v80[884 -(581 + 300) ];break;end end end break;end end elseif ((v81==85) or (3911<2578)) then if (v78[v80[(936 + 286) -(578 + 277 + 365) ]]<v80[13 -9 ]) then v72=v72 + (3 -2) + 0 ;else v72=v80[8 -5 ];end else do return v78[v80[(2682 -(695 + 750)) -(1030 + 205) ]];end end elseif (v81<=88) then if ((v81>(82 + 5)) or (4238<87)) then local v279=0 -0 ;local v280;local v281;local v282;while true do if (v279==(3 -2)) then v282=1248 -(111 + 1137) ;for v443=v280,v80[162 -(91 + 67) ] do local v444=0 -0 ;while true do if ((2538==2538) and (v444==(0 -0))) then v282=v282 + 1 + 0 ;v78[v443]=v281[v282];break;end end end break;end if (v279==(523 -(423 + 100))) then v280=v80[2 + 0 ];v281={v78[v280](v78[v280 + 1 + 0 ])};v279=2 -1 ;end end else local v283=v69[v80[2 + 1 ]];local v284;local v285={};v284=v10({},{__index=function(v334,v335) local v336=v285[v335];return v336[772 -(326 + 445) ][v336[1217 -(369 + 846) ]];end,__newindex=function(v337,v338,v339) local v340=v285[v338];v340[1][v340[8 -6 ]]=v339;end});for v342=1 + 0 ,v80[8 -4 ] do v72=v72 + 1 ;local v343=v68[v72];if (v343[(7 -5) -1 ]==(98 -39)) then v285[v342-(712 -(530 + 181)) ]={v78,v343[2 + 1 ]};else v285[v342-(33 -(19 + (364 -(285 + 66)))) ]={v61,v343[8 -5 ]};end v77[ #v77 + (1 -0) ]=v285;end v78[v80[178 -((1360 -(682 + 628)) + 126) ]]=v29(v283,v284,v62);end elseif (v81>(247 -158)) then local v287=v80[1 + 1 ];do return v13(v78,v287,v287 + v80[1416 -(1233 + 180) ] );end elseif ((4122==4122) and (v80[3 -1 ]==v78[v80[4]])) then v72=v72 + (1 -0) ;else v72=v80[1815 -(1293 + 519) ];end elseif (v81<=(195 -99)) then if (v81<=(242 -149)) then if ((v81<=(173 -82)) or (2371>2654)) then local v164=v80[5 -3 ];v78[v164]=v78[v164](v13(v78,v164 + (4 -3) ,v73));elseif ((v81>(216 -124)) or (3466>4520)) then do return;end else v78[v80[3 -1 ]]=v61[v80[11 -8 ]];end elseif (v81<=(50 + 44)) then local v166=0 + 0 ;local v167;local v168;while true do if ((v166==(1 + 0)) or (951>=1027)) then v78[v167 + (2 -(1 + 0)) ]=v168;v78[v167]=v168[v80[1 + (302 -(176 + 123)) ]];break;end if (v166==0) then v167=v80[1 + 1 + 0 ];v168=v78[v80[2 + 1 ]];v166=1097 -(709 + 387) ;end end elseif (v81>(48 + 47)) then local v290=v80[1860 -(673 + 1185) ];v78[v290](v13(v78,v290 + (2 -(1 + 0)) ,v80[9 -6 ]));else v72=v80[4 -(270 -(239 + 30)) ];end elseif ((v81<=(71 + 28)) or (1369>2250)) then if (v81<=(73 + 7 + 17)) then local v169=0 -0 ;local v170;while true do if (v169==(0 + 0 + 0)) then v170=v80[1 + 1 ];v78[v170](v78[v170 + (1 -0) ]);break;end end elseif ((v81>(192 -94)) or (937>3786)) then local v292=v80[1882 -(446 + 1434) ];local v293={v78[v292](v78[v292 + (2 -1) ])};local v294=1847 -(559 + 1288) ;for v351=v292,v80[1935 -((1899 -1290) + 1322) ] do v294=v294 + (455 -(13 + 441)) ;v78[v351]=v293[v294];end else local v295=v80[7 -5 ];local v296={};for v354=2 -1 , #v77 do local v355=v77[v354];for v396=0 -0 , #v355 do local v397=v355[v396];local v398=v397[2 -1 ];local v399=v397[1 + (316 -(306 + 9)) ];if (((v398==v78) and (v399>=v295)) or (901>4218)) then v296[v399]=v398[v399];v397[1 + 0 ]=v296;end end end end elseif ((4779>4047) and (v81<=((1277 -911) -265))) then if ((4050>1373) and (v81==(36 + 64))) then v78[v80[1 + 0 + 1 ]]=v62[v80[8 -5 ]];else local v299=v69[v80[7 -(3 + 1) ]];local v300;local v301={};v300=v10({},{__index=function(v356,v357) local v358=v301[v357];return v358[1 + 0 ][v358[3 -1 ]];end,__newindex=function(v359,v360,v361) local v362=0 + 0 ;local v363;while true do if ((v362==(0 + 0)) or (1037>4390)) then v363=v301[v360];v363[1 + 0 ][v363[2 + 0 ]]=v361;break;end end end});for v364=1 + 0 ,v80[4 + 0 ] do v72=v72 + (1 -0) ;local v365=v68[v72];if (v365[1 + 0 ]==(738 -(642 + 37))) then v301[v364-(1 + 0 + 0) ]={v78,v365[8 -5 ]};else v301[v364-(2 -1) ]={v61,v365[2 + 1 ]};end v77[ #v77 + 1 + 0 ]=v301;end v78[v80[2 + 0 ]]=v29(v299,v300,v62);end elseif ((1407<=1919) and (v81==(154 -52))) then v78[v80[2 + 0 ]]= not v78[v80[670 -(89 + 578) ]];else v78[v80[1227 -(636 + 589) ]]= not v78[v80[3 + 0 ]];end v72=v72 + (1 -(1375 -(1140 + 235))) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
